version: "3.9"

services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - authservice
      - medicalservice
      - schoolservice
    networks:
      - backend

  authservice:
    build:
      context: ${AUTH_SERVICE_PATH}
      dockerfile: Dockerfile
    container_name: auth-service
    restart: always
    ports:
      - "8081:8081"
    environment:
      PORT: 8081
      DATABASE_URL: ${AUTH_DATABASE_URL}
    depends_on:
      - postgres
    networks:
      - backend

  medicalservice:
    build:
      context: ${MEDICAL_SERVICE_PATH}
      dockerfile: Dockerfile
    container_name: medical-service
    restart: always
    ports:
      - "8082:8082"
    environment:
      PORT: 8082
      DATABASE_URL: ${MEDICAL_DATABASE_URL}
    depends_on:
      - postgres
    networks:
      - backend

  schoolservice:
    build:
      context: ${SCHOOL_SERVICE_PATH}
      dockerfile: Dockerfile
    container_name: school-service
    restart: always
    ports:
      - "8083:8083"
    environment:
      PORT: 8083
      DATABASE_URL: ${SCHOOL_DATABASE_URL}
    depends_on:
      - postgres
    networks:
      - backend

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - backend
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
